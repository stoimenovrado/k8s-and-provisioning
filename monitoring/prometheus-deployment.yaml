apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
        - name: prometheus-config
          persistentVolumeClaim:
            claimName: prometheus-pvc
      initContainers:
        - name: init-chown-data
          image: busybox:latest
          command: ["wget", "https://raw.githubusercontent.com/stoimenovrado/k8s-and-provisioning/main/monitoring/prometheus-conf.yaml", "-O", "/prometheus-config/prometheus.yml"]
          volumeMounts:
            - name: prometheus-config
              mountPath: "/prometheus-config"
      containers:
        - name: prometheus
          image: prom/prometheus
          # args:
          #   - "--config.file=/etc/prometheus/prometheus.yml"
          #   - "--storage.tsdb.path=/data"
          #   - "--web.console.libraries=/etc/prometheus/console_libraries"
          #   - "--web.console.templates=/etc/prometheus/consoles"
          #   - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          readinessProbe:
            httpGet:
              path: "/-/ready"
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: "/-/healthy"
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: "500m"
              memory: "1000Mi"
            requests:
              cpu: "200m"
              memory: "750Mi"
      terminationGracePeriodSeconds: 300
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
