apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      volumes:
        - name: config-volume
          emptyDir: {} # Shared volume to be used by the initContainer and prometheus-server container
      initContainers:
        - name: init-chown-data
          image: busybox:latest
          command: ["wget", "https://raw.githubusercontent.com/stoimenovrado/k8s-and-provisioning/main/monitoring/prometheus-conf.yaml", "-O", "/config/prometheus.yml"]
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
      containers:
        - name: prometheus-server-configmap-reload
          image: jimmidyson/configmap-reload
          args:
            - "--volume-dir=/etc/config"
            - "--webhook-url=http://localhost:9090/-/reload"
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/config"
              readOnly: true
          resources:
            limits:
              cpu: "10m"
              memory: "10Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
        - name: prometheus-server
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yaml"
            - "--storage.tsdb.path=/data"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/config"
            - name: prometheus-data
              mountPath: "/data"
          readinessProbe:
            httpGet:
              path: "/-/ready"
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: "/-/healthy"
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: "950m"
              memory: "1000Mi"
            requests:
              cpu: "200m"
              memory: "750Mi"
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/prometheus"
      terminationGracePeriodSeconds: 300
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
